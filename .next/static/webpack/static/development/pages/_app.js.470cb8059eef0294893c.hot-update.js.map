{"version":3,"file":"static/webpack/static/development/pages/_app.js.470cb8059eef0294893c.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react'\nimport App, { Container } from 'next/app'\nimport Meta from '../components/Meta'\nimport Layout from '../components/Layout'\nimport { checkIsLoggedIn } from '../api/auth/cognito'\nimport redirect from '../lib/redirect.js'\nimport '../index.scss'\n\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, router, ctx }) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return { pageProps }\n  }\n\n  state = { loggedIn: false }\n\n  componentDidMount() {\n    // check if user is logged in\n    const { loggedIn, user } = checkIsLoggedIn()\n    console.log('>> user', user, loggedIn)\n    if (loggedIn) this.setState({ loggedIn })\n    if (!loggedIn) {\n      // If not logged in, redirect to login page\n      redirect({}, '/login')\n    }\n  }\n\n  componentDidCatch (error, errorInfo) {\n    console.log('!!! ERROR CAUGHT', error)\n    // This is needed to render errors correctly in development / production\n    super.componentDidCatch(error, errorInfo)\n  }\n\n  render () {\n    const { loggedIn } = this.state\n    const { Component, pageProps } = this.props\n\n    return (\n      <Container>\n        <Meta />\n        <Layout isLoggedIn={loggedIn}>\n          <Component {...pageProps} />\n        </Layout>\n      </Container>\n    )\n  }\n}\n\nexport default MyApp\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AAWA;AAAA;AAAA;AACA;;;;;;AACA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAKA;;;;;;;;;;;;AAzCA;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AATA;AACA;AA4CA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}