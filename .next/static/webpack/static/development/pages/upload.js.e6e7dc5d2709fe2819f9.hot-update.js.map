{"version":3,"file":"static/webpack/static/development/pages/upload.js.e6e7dc5d2709fe2819f9.hot-update.js","sources":["webpack:///./components/UploadSongForm/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport './UploadSongForm.scss'\n\n\nclass UploadSongForm extends Component {\n  constructor(props) {\n  super(props)\n  this.state = {\n    songTitle: '',\n    artistTitle: '',\n    youtubeUrl: '',\n    yearReleased: '',\n  }\n}\n\n// componentDidMount() {\n//   const user = checkIsLoggedIn()\n//   console.log('>>> user', user)\n// }\n\n_handleInputChange = (inputName, event) => {\n  this.setState({ [inputName]: event.target.value })\n}\n\n_handleSubmit = (event) => {\n  event.preventDefault();\n  const { songTitle, artistTitle, youtubeUrl, yearReleased } = this.state\n  // you'll have to make this postSong function\n  postSong({ songTitle, artistTitle, youtubeUrl, yearReleased })\n  // or just: postSong(this.state);\n}\n\n_onKeyPress = (event) => {\n  if (event.key === 'Enter') {\n    this._handleSubmit(event)\n  }\n}\n\nrender() {\n  const inputFields = Object.keys(this.state);\n  return (\n    <div className={'loginForm__wrapper'} onKeyPress={this._onKeyPress}>\n      {'upload song'}\n      <form onSubmit={this._handleSubmit}>\n        <div className={'loginForm__container'}>\n          {inputFields.map((inputKey) => (\n            <div key={inputKey}>\n              <input\n                onChange={() => this._handleInputChange('inputKey')}\n                type={'text'}\n                placeholder={inputKey}\n                className={'loginForm__input'}\n              />\n            </div>\n          ))}\n        </div>\n        <input\n          type={'submit'}\n          value={'submit'}\n          className={'loginForm__submit-button'}\n        />\n      </form>\n    </div>\n  )\n}\n}\n\n\nexport default UploadSongForm\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAgBA;AACA;AACA;AAlBA;AAoBA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AA1BA;AA4BA;AACA;AACA;AACA;AACA;AA9BA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AAGA;AACA;AACA;AACA;AACA;;;AAkBA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AACA;AAHA;AAQA;;;;AA5DA;AACA;AA+DA;;;;A","sourceRoot":""}