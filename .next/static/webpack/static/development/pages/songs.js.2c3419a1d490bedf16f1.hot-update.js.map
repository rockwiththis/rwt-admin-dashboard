{"version":3,"file":"static/webpack/static/development/pages/songs.js.2c3419a1d490bedf16f1.hot-update.js","sources":["webpack:///./pages/songs.js"],"sourcesContent":["import React, { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport ReactTable from 'react-table'\nimport 'react-table/react-table.css'\nimport { FETCH_ALL_SONGS_URL } from '../api/urls'\n\n\nconst columns = [\n  {\n    Header: 'id',\n    accessor: 'id',\n    maxWidth: 50,\n  },\n  {\n    Header: 'Name',\n    accessor: 'name',\n    // Cell: props => <span className='number'>{props.value}</span> // Custom cell components!\n  },\n  {\n    Header: 'Artist',\n    accessor: 'artist_name',\n  },\n  {\n    Header: 'Description',\n    accessor: 'description',\n  },\n  {\n    Header: 'BPM',\n    accessor: 'bpm',\n    maxWidth: 50,\n  },\n  {\n    Header: 'Created At',\n    accessor: 'created_at',\n    maxWidth: 150,\n  },\n]\n\nclass SongsPage extends Component {\n  state = {\n    songsList: [],\n  }\n\n  async componentDidMount() {\n    const res = await fetch(FETCH_ALL_SONGS_URL)\n    const resJson = await res.json()\n    console.log('>> songs!', resJson);\n    this.setState({ songsList: resJson })\n  }\n\n  render() {\n    const { songsList } = this.state\n    const isLoaded = songsList.length > 0\n    return (\n      <div>\n        {isLoaded\n          ? (\n            <ReactTable\n              data={songsList}\n              columns={columns}\n              defaultPageSize={20}\n              className=\"-striped -highlight\"\n            />\n          )\n          : (\n            'loading...'\n          )}\n      </div>\n    );\n  }\n}\n\nexport default SongsPage\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AACA;AAMA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;AA/BA;AACA;AAiCA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}